const mongoose = require('mongoose');
require('dotenv').config();

// Import models
const User = require('./src/modal/User');
const Tutor = require('./src/modal/Tutor');

// Sample data
const sampleData = [
  {
    user: {
      username: 'NguyenVanA',
      email: 'nguyenvana@gmail.com',
      password: '123456',
      phoneNumber: '0123456789',
      gender: 'male',
      role: 'tutor',
      image: 'https://via.placeholder.com/150/4A90E2/FFFFFF?text=NV',
      verified: true
    },
    tutor: {
      bio: 'Gia s∆∞ To√°n h·ªçc v·ªõi 8 nƒÉm kinh nghi·ªám, chuy√™n luy·ªán thi ƒë·∫°i h·ªçc v√† √¥n thi h·ªçc sinh gi·ªèi.',
      subjects: ['To√°n h·ªçc', 'V·∫≠t l√Ω'],
      classes: [10, 11, 12],
      pricePerHour: 200000,
      experience: '8 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y',
      education: 'Th·∫°c sƒ© To√°n h·ªçc - ƒê·∫°i h·ªçc B√°ch Khoa H√† N·ªôi',
      location: 'H√† N·ªôi',
      rating: 4.8,
      languages: ['Ti·∫øng Vi·ªát', 'Ti·∫øng Anh'],
      certifications: [
        {
          title: 'Ch·ª©ng ch·ªâ s∆∞ ph·∫°m',
          issuedBy: 'B·ªô Gi√°o d·ª•c v√† ƒê√†o t·∫°o',
          year: 2018
        }
      ],
      availableTimes: [
        { day: 'Th·ª© 2', slots: ['19:00-21:00'] },
        { day: 'Th·ª© 4', slots: ['19:00-21:00'] },
        { day: 'Th·ª© 6', slots: ['19:00-21:00'] }
      ],
      profileImage: 'https://via.placeholder.com/300x300/4A90E2/FFFFFF?text=Nguyen+Van+A',
      isVerified: true,
      active: true
    }
  },
  {
    user: {
      username: 'TranThiB',
      email: 'tranthib@gmail.com',
      password: '123456',
      phoneNumber: '0987654321',
      gender: 'female',
      role: 'tutor',
      image: 'https://via.placeholder.com/150/E74C3C/FFFFFF?text=TT',
      verified: true
    },
    tutor: {
      bio: 'Gia s∆∞ Ng·ªØ VƒÉn chuy√™n nghi·ªáp, c√≥ kinh nghi·ªám d·∫°y h·ªçc sinh c·∫•p 2 v√† c·∫•p 3.',
      subjects: ['Ng·ªØ VƒÉn', 'L·ªãch s·ª≠'],
      classes: [6, 7, 8, 9, 10, 11, 12],
      pricePerHour: 150000,
      experience: '5 nƒÉm kinh nghi·ªám gi·∫£ng d·∫°y',
      education: 'C·ª≠ nh√¢n Ng·ªØ VƒÉn - ƒê·∫°i h·ªçc S∆∞ ph·∫°m H√† N·ªôi',
      location: 'TP. H·ªì Ch√≠ Minh',
      rating: 4.6,
      languages: ['Ti·∫øng Vi·ªát'],
      certifications: [
        {
          title: 'Ch·ª©ng ch·ªâ s∆∞ ph·∫°m',
          issuedBy: 'B·ªô Gi√°o d·ª•c v√† ƒê√†o t·∫°o',
          year: 2019
        }
      ],
      availableTimes: [
        { day: 'Th·ª© 3', slots: ['18:00-20:00'] },
        { day: 'Th·ª© 5', slots: ['18:00-20:00'] },
        { day: 'Th·ª© 7', slots: ['14:00-16:00'] }
      ],
      profileImage: 'https://via.placeholder.com/300x300/E74C3C/FFFFFF?text=Tran+Thi+B',
      isVerified: true,
      active: true
    }
  }
];

async function seedData() {
  try {
    console.log('üîó Connecting to database...');
    await mongoose.connect(process.env.DB_HOST || 'mongodb://localhost:27017/learnmate');
    console.log('‚úÖ Connected to database');

    // Clear existing data
    console.log('üóëÔ∏è Clearing existing data...');
    await User.deleteMany({ role: 'tutor' });
    await Tutor.deleteMany({});
    console.log('‚úÖ Cleared existing data');

    // Add sample data
    console.log('üì• Adding sample data...');
    for (const data of sampleData) {
      const user = new User(data.user);
      await user.save();
      
      const tutor = new Tutor({
        ...data.tutor,
        user: user._id
      });
      await tutor.save();
      
      console.log(`‚úÖ Added tutor: ${user.username}`);
    }

    console.log('üéâ Sample data added successfully!');
    console.log(`üìä Total tutors: ${sampleData.length}`);

  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Database connection closed');
  }
}

// Run seed
seedData();
