import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './ForumList.scss';

const ForumList = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const navigate = useNavigate();

  const categories = [
    { id: 'all', label: 'T·∫•t c·∫£', icon: 'üìö' },
    { id: 'math', label: 'To√°n h·ªçc', icon: 'üî¢' },
    { id: 'physics', label: 'V·∫≠t l√Ω', icon: '‚öõÔ∏è' },
    { id: 'chemistry', label: 'H√≥a h·ªçc', icon: 'üß™' },
    { id: 'english', label: 'Ti·∫øng Anh', icon: 'üá¨üáß' },
    { id: 'programming', label: 'L·∫≠p tr√¨nh', icon: 'üíª' },
    { id: 'general', label: 'Chung', icon: 'üí¨' }
  ];

  const mockPosts = [
    {
      id: 1,
      title: 'C√°ch gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c 2 hi·ªáu qu·∫£ nh·∫•t',
      content: 'M√¨nh ƒëang g·∫∑p kh√≥ khƒÉn v·ªõi vi·ªác gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c 2. C√≥ ai c√≥ ph∆∞∆°ng ph√°p n√†o hi·ªáu qu·∫£ kh√¥ng?',
      author: 'Nguy·ªÖn VƒÉn A',
      avatar: 'https://i.pravatar.cc/40',
      category: 'math',
      replies: 15,
      views: 234,
      likes: 28,
      createdAt: '2 gi·ªù tr∆∞·ªõc',
      tags: ['to√°n h·ªçc', 'ph∆∞∆°ng tr√¨nh', 'b·∫≠c 2']
    },
    {
      id: 2,
      title: 'T√†i li·ªáu h·ªçc IELTS mi·ªÖn ph√≠ ch·∫•t l∆∞·ª£ng cao',
      content: 'Chia s·∫ª b·ªô t√†i li·ªáu IELTS m√¨nh ƒë√£ s∆∞u t·∫ßm, r·∫•t h·ªØu √≠ch cho c√°c b·∫°n ƒëang √¥n thi.',
      author: 'Tr·∫ßn Th·ªã B',
      avatar: 'https://i.pravatar.cc/40',
      category: 'english',
      replies: 8,
      views: 156,
      likes: 42,
      createdAt: '4 gi·ªù tr∆∞·ªõc',
      tags: ['ielts', 't√†i li·ªáu', 'mi·ªÖn ph√≠']
    },
    {
      id: 3,
      title: 'H∆∞·ªõng d·∫´n h·ªçc React.js t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao',
      content: 'M√¨nh s·∫Ω chia s·∫ª roadmap h·ªçc React.js d√†nh cho ng∆∞·ªùi m·ªõi b·∫Øt ƒë·∫ßu.',
      author: 'L√™ VƒÉn C',
      avatar: 'https://i.pravatar.cc/40',
      category: 'programming',
      replies: 23,
      views: 445,
      likes: 67,
      createdAt: '6 gi·ªù tr∆∞·ªõc',
      tags: ['react', 'javascript', 'frontend']
    },
    {
      id: 4,
      title: 'C√¥ng th·ª©c t√≠nh nhanh trong V·∫≠t l√Ω',
      content: 'T·ªïng h·ª£p c√°c c√¥ng th·ª©c t√≠nh nhanh gi√∫p ti·∫øt ki·ªám th·ªùi gian trong thi c·ª≠.',
      author: 'Ph·∫°m Th·ªã D',
      avatar: 'https://i.pravatar.cc/40',
      category: 'physics',
      replies: 12,
      views: 189,
      likes: 35,
      createdAt: '8 gi·ªù tr∆∞·ªõc',
      tags: ['v·∫≠t l√Ω', 'c√¥ng th·ª©c', 't√≠nh nhanh']
    }
  ];

  const filteredPosts = selectedCategory === 'all' 
    ? mockPosts 
    : mockPosts.filter(post => post.category === selectedCategory);

  return (
    <div className="forum-list">
      {/* Category Filter */}
      <div className="category-filter">
        <div className="filter-tabs">
          {categories.map(category => (
            <button
              key={category.id}
              className={`filter-tab ${selectedCategory === category.id ? 'active' : ''}`}
              onClick={() => setSelectedCategory(category.id)}
            >
              <span className="tab-icon">{category.icon}</span>
              <span className="tab-label">{category.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* Posts List */}
      <div className="posts-container">
        {filteredPosts.map(post => (
          <div key={post.id} className="post-card">
            <div className="post-header">
              <div className="author-info">
                <img src={post.avatar} alt={post.author} className="author-avatar" />
                <div className="author-details">
                  <span className="author-name">{post.author}</span>
                  <span className="post-time">{post.createdAt}</span>
                </div>
              </div>
              <div className="post-category">
                {categories.find(cat => cat.id === post.category)?.icon}
                {categories.find(cat => cat.id === post.category)?.label}
              </div>
            </div>

            <div className="post-content">
              <h3 className="post-title">{post.title}</h3>
              <p className="post-excerpt">{post.content}</p>
              <div className="post-tags">
                {post.tags.map(tag => (
                  <span key={tag} className="tag">#{tag}</span>
                ))}
              </div>
            </div>

            <div className="post-stats">
              <div className="stat-item">
                <span className="stat-icon">üí¨</span>
                <span className="stat-value">{post.replies}</span>
              </div>
              <div className="stat-item">
                <span className="stat-icon">üëÅÔ∏è</span>
                <span className="stat-value">{post.views}</span>
              </div>
              <div className="stat-item">
                <span className="stat-icon">üëç</span>
                <span className="stat-value">{post.likes}</span>
              </div>
            </div>

            <div className="post-actions">
              <button className="btn-like">
                <span>üëç</span> Th√≠ch
              </button>
              <button className="btn-reply">
                <span>üí¨</span> Tr·∫£ l·ªùi
              </button>
              <button className="btn-share">
                <span>üì§</span> Chia s·∫ª
              </button>
            </div>
          </div>
        ))}
      </div>

      {/* Load More */}
      <div className="load-more">
        <button className="btn-load-more">
          T·∫£i th√™m b√†i vi·∫øt
        </button>
      </div>
    </div>
  );
};

export default ForumList;
