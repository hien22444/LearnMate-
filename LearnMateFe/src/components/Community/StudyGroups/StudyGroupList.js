import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './StudyGroupList.scss';

const StudyGroupList = () => {
  const [selectedSubject, setSelectedSubject] = useState('all');
  const navigate = useNavigate();

  const subjects = [
    { id: 'all', label: 'T·∫•t c·∫£', icon: 'üìö' },
    { id: 'math', label: 'To√°n h·ªçc', icon: 'üî¢' },
    { id: 'physics', label: 'V·∫≠t l√Ω', icon: '‚öõÔ∏è' },
    { id: 'chemistry', label: 'H√≥a h·ªçc', icon: 'üß™' },
    { id: 'english', label: 'Ti·∫øng Anh', icon: 'üá¨üáß' },
    { id: 'programming', label: 'L·∫≠p tr√¨nh', icon: 'üíª' }
  ];

  const mockStudyGroups = [
    {
      id: 1,
      name: 'Nh√≥m h·ªçc To√°n 12 - √în thi ƒê·∫°i h·ªçc',
      description: 'Nh√≥m h·ªçc t·∫≠p chuy√™n s√¢u v·ªÅ To√°n 12, chu·∫©n b·ªã cho k·ª≥ thi ƒê·∫°i h·ªçc. Ch√∫ng ta s·∫Ω c√πng nhau gi·∫£i ƒë·ªÅ, chia s·∫ª kinh nghi·ªám v√† h·ªó tr·ª£ l·∫´n nhau.',
      subject: 'math',
      level: 'N√¢ng cao',
      members: 24,
      maxMembers: 30,
      creator: 'Nguy·ªÖn VƒÉn A',
      avatar: 'https://i.pravatar.cc/40',
      createdAt: '3 ng√†y tr∆∞·ªõc',
      nextSession: 'H√¥m nay, 19:00',
      tags: ['to√°n 12', '√¥n thi ƒë·∫°i h·ªçc', 'n√¢ng cao']
    },
    {
      id: 2,
      name: 'IELTS Speaking Club',
      description: 'Nh√≥m luy·ªán thi IELTS Speaking, th·ª±c h√†nh giao ti·∫øp ti·∫øng Anh h√†ng ng√†y. M·ªçi tr√¨nh ƒë·ªô ƒë·ªÅu ƒë∆∞·ª£c ch√†o ƒë√≥n!',
      subject: 'english',
      level: 'Trung b√¨nh',
      members: 18,
      maxMembers: 25,
      creator: 'Tr·∫ßn Th·ªã B',
      avatar: 'https://i.pravatar.cc/40',
      createdAt: '1 tu·∫ßn tr∆∞·ªõc',
      nextSession: 'Mai, 20:00',
      tags: ['ielts', 'speaking', 'ti·∫øng anh']
    },
    {
      id: 3,
      name: 'React.js Study Group',
      description: 'H·ªçc React.js t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao. Ch√∫ng ta s·∫Ω l√†m project th·ª±c t·∫ø v√† chia s·∫ª kinh nghi·ªám l·∫≠p tr√¨nh.',
      subject: 'programming',
      level: 'C∆° b·∫£n',
      members: 12,
      maxMembers: 20,
      creator: 'L√™ VƒÉn C',
      avatar: 'https://i.pravatar.cc/40',
      createdAt: '5 ng√†y tr∆∞·ªõc',
      nextSession: 'Th·ª© 7, 14:00',
      tags: ['react', 'javascript', 'frontend']
    },
    {
      id: 4,
      name: 'V·∫≠t l√Ω 11 - C∆° h·ªçc',
      description: 'Nh√≥m h·ªçc V·∫≠t l√Ω 11 chuy√™n v·ªÅ ph·∫ßn C∆° h·ªçc. C√πng nhau gi·∫£i b√†i t·∫≠p v√† hi·ªÉu s√¢u v·ªÅ c√°c kh√°i ni·ªám v·∫≠t l√Ω.',
      subject: 'physics',
      level: 'Trung b√¨nh',
      members: 15,
      maxMembers: 20,
      creator: 'Ph·∫°m Th·ªã D',
      avatar: 'https://i.pravatar.cc/40',
      createdAt: '2 tu·∫ßn tr∆∞·ªõc',
      nextSession: 'Ch·ªß nh·∫≠t, 15:00',
      tags: ['v·∫≠t l√Ω 11', 'c∆° h·ªçc', 'b√†i t·∫≠p']
    }
  ];

  const filteredGroups = selectedSubject === 'all' 
    ? mockStudyGroups 
    : mockStudyGroups.filter(group => group.subject === selectedSubject);

  return (
    <div className="study-groups-list">
      {/* Subject Filter */}
      <div className="subject-filter">
        <div className="filter-tabs">
          {subjects.map(subject => (
            <button
              key={subject.id}
              className={`filter-tab ${selectedSubject === subject.id ? 'active' : ''}`}
              onClick={() => setSelectedSubject(subject.id)}
            >
              <span className="tab-icon">{subject.icon}</span>
              <span className="tab-label">{subject.label}</span>
            </button>
          ))}
        </div>
      </div>

      {/* Study Groups Grid */}
      <div className="groups-grid">
        {filteredGroups.map(group => (
          <div key={group.id} className="group-card">
            <div className="group-header">
              <div className="group-info">
                <h3 className="group-name">{group.name}</h3>
                <div className="group-meta">
                  <span className="subject-badge">
                    {subjects.find(sub => sub.id === group.subject)?.icon}
                    {subjects.find(sub => sub.id === group.subject)?.label}
                  </span>
                  <span className="level-badge level-{group.level.toLowerCase().replace(' ', '-')}">
                    {group.level}
                  </span>
                </div>
              </div>
              <div className="group-avatar">
                <img src={group.avatar} alt={group.creator} />
              </div>
            </div>

            <div className="group-description">
              <p>{group.description}</p>
            </div>

            <div className="group-stats">
              <div className="stat-item">
                <span className="stat-icon">üë•</span>
                <span className="stat-value">{group.members}/{group.maxMembers}</span>
                <span className="stat-label">th√†nh vi√™n</span>
              </div>
              <div className="stat-item">
                <span className="stat-icon">üìÖ</span>
                <span className="stat-value">{group.nextSession}</span>
                <span className="stat-label">bu·ªïi ti·∫øp theo</span>
              </div>
            </div>

            <div className="group-tags">
              {group.tags.map(tag => (
                <span key={tag} className="tag">#{tag}</span>
              ))}
            </div>

            <div className="group-footer">
              <div className="creator-info">
                <span className="creator-label">T·∫°o b·ªüi:</span>
                <span className="creator-name">{group.creator}</span>
                <span className="created-time">{group.createdAt}</span>
              </div>
              <div className="group-actions">
                <button className="btn-join">
                  Tham gia
                </button>
                <button className="btn-view">
                  Xem chi ti·∫øt
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Create Group CTA */}
      <div className="create-group-cta">
        <div className="cta-content">
          <h3>Kh√¥ng t√¨m th·∫•y nh√≥m ph√π h·ª£p?</h3>
          <p>T·∫°o nh√≥m h·ªçc t·∫≠p c·ªßa ri√™ng b·∫°n v√† k·∫øt n·ªëi v·ªõi nh·ªØng ng∆∞·ªùi c√≥ c√πng m·ª•c ti√™u h·ªçc t·∫≠p!</p>
          <button className="btn-create-group">
            T·∫°o nh√≥m h·ªçc t·∫≠p
          </button>
        </div>
      </div>
    </div>
  );
};

export default StudyGroupList;
